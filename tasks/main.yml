---
# Variable configuration.
- include_tasks: variables.yml

- name: Ensure PostgreSQL packages are installed.
  package:
    name: "{{item}}"
    state: present
    enablerepo: "{{postgresql_enablerepo}}"
  with_items: "{{postgresql_packages}}"

- name: Ensure PostgreSQL Python libraries are installed.
  package:
    name: "{{ postgresql_python_library }}"
    state: present
    enablerepo: "{{ postgresql_enablerepo }}"

- name: Set PostgreSQL environment variables.
  template:
    src: postgres.sh.j2
    dest: /etc/profile.d/postgres.sh
    mode: 0644
  notify: restart postgresql

# Create the data dir
- shell: mkdir {{ postgresql_data_dir }}
- command: chmod 077 {{ postgresql_data_dir }} 
- command: "chown {{ postgresql_user }}:{{ postgresql_group }} {{ postgresql_data_dir }}"

- name: Check if PostgreSQL database is initialized.
  stat:
    path: "{{ postgresql_data_dir }}/PG_VERSION"
  register: pgdata_dir_version

- name: Ensure PostgreSQL database is initialized.
  command: "{{ postgresql_bin_path }}/initdb -D {{ postgresql_data_dir }}"
  when: not pgdata_dir_version.stat.exists
  become: true
  become_user: "{{ postgresql_user }}"
  # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
  vars:
    ansible_ssh_pipelining: true

- include_tasks: configure.yml   

- name: Ensure PostgreSQL is started and enabled on boot.
  service:
    name: "{{postgresql_daemon}}"
    state: "{{postgresql_service_state}}"
    enabled: "{{postgresql_service_enabled}}"

# Configure PostgreSQL.
- import_tasks: databases.yml
- import_tasks: users.yml
